openapi: 3.0.0
info:
  version: ''
  title: Abandoned Carts
  description: |-
    Use `/abandoned-carts/{token}` on headless storefronts to retrieve the `cart_id` via the abandoned cart `token` passed in to headless storefront via an abandoned cart email link clicked on by a shopper. Once the `cart_id` has been retrieved, it can be used to fetch and display information about the cart to the shopper via the storefront cart and/or server-to-server cart APIs.

    ## OAuth Scopes
    | UI Name                                      | Permission | Parameter                                     |
    |----------------------------------------------|------------|-----------------------------------------------|
    | Information & Settings                       | read-only  | `store_v2_information_read_only`              |
    | Information & Settings                       | modify     | `store_v2_information`                        |

    For more information on OAuth Scopes, see: [Authentication](/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).

    ## Authentication

    Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:

    ```http
    GET /stores/{store_hash}/v3/catalog/summary
    host: api.bigcommerce.com
    Accept: application/json
    X-Auth-Token: {access_token}
    ```

    |Header|Parameter|Description|
    |-|-|-|
    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

    For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).
paths:
  '/stores/{store_hash}/v3/abandoned-carts/settings':
    get:
      summary: Get Global Abandoned Cart Settings
      description: Returns the global abandoned cart settings of a store.
      operationId: getGlobalAbandonedCartSettings
      tags:
        - Abandoned Cart Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      parameters: []
    put:
      summary: Update Global Abandoned Cart Settings
      description: Updates the global abandoned cart settings of a store.
      operationId: UpdateGlobalAbandonedCartSettings
      tags:
        - Abandoned Carts Settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalAbandonedCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
  '/stores/{store_hash}/v3/abandoned-carts/settings/channels/{channel_id}':
    get:
      summary: Get Channel Abandoned Cart Settings
      description: Returns the per-channel overrides for the abandoned cart settings of a store.
      operationId: getChannelAbandonedCartSettings
      tags:
        - Abandoned Carts Settings
      parameters:
        - name: channel_id
          description: The channel ID of the settings overrides
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update Channel Abandoned Cart Settings
      description: |-
        Updates the per-channel overrides for the abandoned cart settings of a store.

        #### OAuth Scopes
        | UI Name                                      | Permission | Parameter                                     |
        |----------------------------------------------|------------|-----------------------------------------------|     
        | Information & Settings                       | modify     | `store_v2_information`                        |
      operationId: UpdateChannelAbandonedCartSettings
      tags:
        - Abandoned Carts Settings
      parameters:
        - name: channel_id
          description: The channel ID of the settings overrides
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelAbandonedCartSettingsRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessible entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
      - schema:
          type: string
        name: channel_id
        in: path
        required: true
  '/stores/{store_hash}/v3/abandoned-carts/{token}':
    get:
      responses:
        '200':
          $ref: '#/components/responses/abandonedCart_Resp'
        '400':
          $ref: '#/components/responses/400_BadRequest'
        '404':
          $ref: '#/components/responses/404_NotFound'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
        '502':
          $ref: '#/components/responses/502_GatewayError'
        '503':
          $ref: '#/components/responses/503_ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504_GatewayTimeout'
        default:
          description: ''
      summary: Get an Abandoned Cart
      description: |-
        Returns the `cart_id` corresponding to the abandoned cart `{token}` passed in.

        **Usage Notes**:
        * `{token}` is the token in the query string of the abandoned cart link found in abandoned cart email notifications to shoppers
      operationId: getAbandonedCarts
      tags:
        - Abandoned Carts
    parameters:
      - name: token
        in: path
        required: true
        description: |-
          Unique cart `UUID`.

          Unique cart `UUID` token that is generated for abandoned cart emails.
        schema:
          type: string
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
security:
  - X-Auth-Token: []
  - OAuthScopes: []
tags:
  - name: Abandoned Carts
  - name: Abandoned Cart Settings
  - name: Abandoned Carts Settings
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
servers:
  - url: 'https://api.bigcommerce.com'
components:
  parameters:
    Accept:
      in: header
      name: Accept
      required: true
      description: Accept
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      required: true
      description: Content-Type
      schema:
        type: string
        default: application/json
  responses:
    502_GatewayError:
      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: /api-docs/getting-started/api-status-codes
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: /api-docs/getting-started/api-status-codes
                errors: {}
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: /api-docs/getting-started/api-status-codes
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON
        Body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: /api-docs/getting-started/api-status-codes
    404_NotFound:
      description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 404
                title: 'Account with {id} not found'
                type: /api-docs/getting-started/api-status-codes
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: /api-docs/getting-started/api-status-codes
                errors:
                  name: error.expected.jsstring
                  primary_contact.district: error.expected.jsstring.
    503_ServiceUnavailable:
      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: /api-docs/getting-started/api-status-codes
    abandonedCart_Resp:
      description: Returned on `GET` requests to `/abandoned_carts`.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/abandonedCartInfo_Full'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        | Information & Settings  | read-only  | `store_v2_information_read_only`|
        | Information & Settings  | modify     | `store_v2_information`          |


        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).
  schemas:
    metaEmpty_Full:
      type: object
      title: metaEmpty_Full
      x-internal: false
      properties:
        meta:
          type: object
    error_Full:
      type: object
      title: error_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-internal: false
    errorDetailed_Full:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: string
          title: DetailedErrors
      title: errorDetailed_Full
      x-internal: false
    abandonedCartInfo_Full:
      type: object
      title: abandonedCartInfo_Full
      properties:
        cart_id:
          type: string
          description: The `cart_id` of the abandoned cart. Can be used to display the abanded cart to the customer via storefront cart or
      x-internal: false
    AbandonedCartSettings:
      description: Represents all settings related to the abandoned cart functionality of a store
      type: object
      x-tags:
        - Models
      properties:
        enable_notification:
          description: Indicates whether or not abandoned cart notification is on
          type: boolean
        email_customer_until_cart_is_recovered:
          description: Indicates whether or not a customer should continue to receive abandoned cart emails until their cart is recovered
          type: boolean
        marketing_emails_require_customer_consent:
          description: Indicates whether or not a customer should receive abandoned cart emails based on their consent. By default customers will not receive emails.
          type: boolean
        email_merchant_when_cart_is_converted:
          description: Indicates whether or not a merchant should receive a notification email when a cart is converted into an order
          type: boolean
        email_merchant_when_cart_is_abandoned:
          description: Indicates whether or not a merchant should receive a notification email when a cart is abandoned
          type: boolean
        merchant_email_address:
          description: The email address for receiving merchant notifications
          type: string
          format: email
        merchant_abandoned_cart_email_frequency_type:
          description: 'Indicates whether to send an email for every abandoned cart, or to send a digest email after X number of abandoned carts'
          type: string
          enum:
            - digest
            - individual
        merchant_abandoned_cart_digest_email_frequency:
          description: The number of abandoned carts to accumulate before a digest email is sent to a merchant
          type: integer
          minimum: 2
          maximum: 1000
    ChannelAbandonedCartSettings:
      description: Represents all settings overrides related to the abandoned cart functionality of a store for a channel
      type: object
      x-tags:
        - Models
      properties:
        enable_notification:
          description: 'Indicates whether or not abandoned cart notification is on. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        email_customer_until_cart_is_recovered:
          description: 'Indicates whether or not a customer should continue to receive abandoned cart emails until their cart is recovered. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        marketing_emails_require_customer_consent:
          description: 'Indicates whether or not a customer should receive abandoned cart emails based on their consent. If it is null, it means there is no override for the specified channel. By default customers will not receive emails.'
          type: boolean
          nullable: true
        email_merchant_when_cart_is_converted:
          description: 'Indicates whether or not a merchant should receive a notification email when a cart is converted into an order. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        email_merchant_when_cart_is_abandoned:
          description: 'Indicates whether or not a merchant should receive a notification email when a cart is abandoned. If it is null, it means there is no override for the specified channel.'
          type: boolean
          nullable: true
        merchant_email_address:
          description: 'The email address for receiving merchant notifications. If it is null, it means there is no override for the specified channel.'
          type: string
          format: email
          nullable: true
        merchant_abandoned_cart_email_frequency_type:
          description: 'Indicates whether to send an email for every abandoned cart or to send a digest email after X number of abandoned carts. If it is null, it means there is no override for the specified channel.'
          type: string
          enum:
            - digest
            - individual
          nullable: true
        merchant_abandoned_cart_digest_email_frequency:
          description: 'The number of abandoned carts to accumulate before a digest email is sent to a merchant. If it is null, it means there is no override for the specified channel.'
          type: integer
          minimum: 2
          maximum: 1000
          nullable: true
    ChannelAbandonedCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/ChannelAbandonedCartSettings'
        - description: The request object for updating the abandoned cart settings overrides of a store for a channel
      x-tags:
        - Models
    ChannelAbandonedCartSettingsResponse:
      description: The response object of abandoned cart settings overrides for a channel
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ChannelAbandonedCartSettings'
        meta:
          type: object
      x-tags:
        - Models
    GlobalAbandonedCartSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/AbandonedCartSettings'
        - description: The request object for updating the abandoned cart settings of a store at the global level
          required:
            - enabled
            - email_customer_until_cart_is_recovered
            - marketing_emails_require_customer_consent
            - email_merchant_when_cart_is_converted
            - email_merchant_when_cart_is_abandoned
            - merchant_email_address
            - merchant_abandoned_cart_email_frequency_type
            - merchant_abandoned_cart_digest_email_frequency
      x-tags:
        - Models
    GlobalAbandonedCartSettingsResponse:
      description: The response object of abandoned cart settings at the global level
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AbandonedCartSettings'
        meta:
          type: object
      x-tags:
        - Models
    ErrorResponse:
      description: The response object containing details of an error
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
      x-tags:
        - Models